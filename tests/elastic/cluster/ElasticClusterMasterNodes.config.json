{
    
    "workflows": [
        {
            "name": "Elastic Basic Auth",
            "steps": [
              {
                "stepId": "auth-elastic-basic",
                "type": "scripted-auth",
                "resultsProcessor": {
                  "resource": "/general/authentication/standard-restricted-data-as-auth.js",
                  "data": {
                    "fromHost": "elastic",
                    "keyOfValue": "authorization",
                    "headerName": "Authorization",
                    "propertiesStoredOnStep": "auth-elastic-basic",
                    "propertyName": "Authorization"              
                  }
                }
              }
            ]
          },
              {
            "name": "Get number of  master eligible nodes",
            "steps": [
                {
                    "type": "scripted",
                    "stepId": "get-master-eligible-nodes",
                    "trigger": { "timer" : { "period" : 600000 }},
                    "authenticationProcessor" : {
                        "comment" : [
                          "This expects that there is a property called 'Authorization' stored on a step",
                          "If it is not present then it asks another step to put them them"
                        ],
                        "resource": "/general/authentication/set-header-from-step-properties.js",
                        "data": {
                          "propertiesStoredOnStep": "auth-elastic-basic",
                          "propertyName": "Authorization",
                          "authStep": "auth-elastic-basic",
                          "passToAuthData" : {                
                          }
                        }
                      },
                      "urlGenerator": {
                        "resource": "/general/standard-url-generator.js",
                        "data": {
                            "path": "/_cat/nodes?h=name,role&format=JSON",
                            "host-ref": "elastic"
                        }
                    },
                    "resultsProcessor": {
                        "resource": "/elastic/cluster/master-nodes-count.js",
                        "data": {
                            "processroute": "get-minimum-master-nodes"
                        }
                    }
                },
                {
                    "enabled": true,
                    "type": "scripted",
                    "stepId": "get-minimum-master-nodes",
                    "authenticationProcessor" : {
                        "comment" : [
                          "This expects that there is a property called 'Authorization' stored on a step",
                          "If it is not present then it asks another step to put them them"
                        ],
                        "resource": "/general/authentication/set-header-from-step-properties.js",
                        "data": {
                          "propertiesStoredOnStep": "auth-elastic-basic",
                          "propertyName": "Authorization",
                          "authStep": "auth-elastic-basic",
                          "passToAuthData" : {                
                          }
                        }
                      },
                    "payloadGenerator": {
                        "script": "context.setProperty(\"master-eligible-nodes\", JSON.parse(context.getMessageBodyAsString())[\"master-eligible-nodes\"]); context.setMessage(null);"
                    },
                    "urlGenerator": {
                        "resource": "/general/standard-url-generator.js",
                        "data": {
                            "path": "/_cluster/settings?include_defaults=true",
                            "host-ref": "elastic"
                        }
                    },
                    "resultsProcessor": {
                        "resource": "/elastic/cluster/minimum-master-nodes.js",
                        "data": {
                            "processroute": "get-master-eligible-nodes-sender"
                        }
                    }
                },
                {
                    "comment": "This little quirk allows the above step to process the metric but not send it, so that we can reuse the above code",
                    "type": "scripted",
                    "stepId": "get-master-eligible-nodes-sender",
                    "resultsProcessor": {
                        "resource": "/general/standard-send-metric.js"
                    }
                }
            ],
            "data": {
                "ad": {
                    "elastic-cluster-master-eligible-nodes": [
                        "NON_ZERO"
                    ]
                }
            }
        }
    ]
}